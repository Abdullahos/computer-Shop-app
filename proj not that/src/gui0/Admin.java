/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui0;

import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.stage.FileChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author abdul
 * this class contains admins funtions
 */
public class Admin extends javax.swing.JFrame {
/*  con obj-> oject to iitlaize the connecting parameters in the makeConnection class
    */
    private makeConnection1 con;
    //admin data
    private String adminName;
    private String adminPass;
    private int adminId;
    //image path
    String Imagepath;
    public Admin() {
        initComponents();
         //center the program window in the middle of the screen
        this.setLocationRelativeTo(null);
        con = new makeConnection1();
        //get admins data from the login
        adminName = store.getLog().getUserNameOrEmail();
        adminPass = store.getLog().getPassword();
        adminId = store.getLog().getId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        addProduct = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        removeProduct = new javax.swing.JButton();
        editProduct = new javax.swing.JButton();
        viewHistory = new javax.swing.JButton();
        set_product_describtion = new javax.swing.JTextField();
        setPriceTxtField = new javax.swing.JTextField();
        setNameTxtField = new javax.swing.JTextField();
        idProductToRemove = new javax.swing.JTextField();
        productIdToEdit = new javax.swing.JTextField();
        newProductPrice = new javax.swing.JTextField();
        newProductDescription = new javax.swing.JTextField();
        descriptionCheckBox = new javax.swing.JCheckBox();
        priceCheckBox = new javax.swing.JCheckBox();
        newProductName = new javax.swing.JTextField();
        nameCheckBox = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        history = new javax.swing.JTextArea();
        productPicturePath = new javax.swing.JTextField();
        imagecheckBox = new javax.swing.JCheckBox();
        imagePath = new javax.swing.JTextField();
        imageChooser = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addProduct.setText("add product");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 51, 255));
        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("welcome admin");
        jLabel1.setToolTipText("");
        jLabel1.setEnabled(false);

        removeProduct.setText("remove product");
        removeProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeProductActionPerformed(evt);
            }
        });

        editProduct.setText("edit product");
        editProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProductActionPerformed(evt);
            }
        });

        viewHistory.setText("view activity history");
        viewHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewHistoryActionPerformed(evt);
            }
        });

        set_product_describtion.setText("add description");
        set_product_describtion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                set_product_describtionActionPerformed(evt);
            }
        });

        setPriceTxtField.setText("set price");
        setPriceTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setPriceTxtFieldActionPerformed(evt);
            }
        });

        setNameTxtField.setText("set name");
        setNameTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setNameTxtFieldActionPerformed(evt);
            }
        });

        idProductToRemove.setText("enter product id to remove");
        idProductToRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idProductToRemoveActionPerformed(evt);
            }
        });

        productIdToEdit.setText("product id");
        productIdToEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productIdToEditActionPerformed(evt);
            }
        });

        newProductPrice.setText("0000");
        newProductPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProductPriceActionPerformed(evt);
            }
        });

        newProductDescription.setText("new description");

        descriptionCheckBox.setText("description");
        descriptionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionCheckBoxActionPerformed(evt);
            }
        });

        priceCheckBox.setText("price");
        priceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceCheckBoxActionPerformed(evt);
            }
        });

        newProductName.setText("new name");

        nameCheckBox.setText("name");
        nameCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameCheckBoxActionPerformed(evt);
            }
        });

        history.setColumns(20);
        history.setRows(5);
        jScrollPane1.setViewportView(history);

        productPicturePath.setText("picture path");
        productPicturePath.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productPicturePathMouseClicked(evt);
            }
        });
        productPicturePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productPicturePathActionPerformed(evt);
            }
        });

        imagecheckBox.setText("image");
        imagecheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imagecheckBoxActionPerformed(evt);
            }
        });

        imagePath.setText("image path");

        imageChooser.setText("choose image");
        imageChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(170, 170, 170))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(newProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameCheckBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(priceCheckBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newProductDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(descriptionCheckBox))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(imagecheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(imagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(160, 160, 160)
                                                .addComponent(productIdToEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(setNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(setPriceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(set_product_describtion, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(88, 88, 88)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(imageChooser)
                                            .addComponent(productPicturePath, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(idProductToRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 325, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addProduct)
                            .addComponent(editProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(removeProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addProduct)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(set_product_describtion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(imageChooser)
                        .addComponent(setPriceTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(setNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(productPicturePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idProductToRemove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imagecheckBox)
                    .addComponent(descriptionCheckBox)
                    .addComponent(priceCheckBox)
                    .addComponent(nameCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newProductPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newProductDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productIdToEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProductActionPerformed
        try{
            //conisidering the new product data
            int productId = Integer.parseInt(productIdToEdit.getText().trim());
            String newName = newProductName.getText().trim();
            String newDescribtion = newProductDescription.getText().trim();
            double newPrice = Double.parseDouble(newProductPrice.getText().trim());
            String imgPath = imagePath.getText().trim();
            
            //check input
            if(newPrice<0)  {
                JOptionPane.showMessageDialog(null,"price must be positive!");
                return;
            }
            boolean wrongId  = false;
            /*checking if to consider the change in name or/and price or/and description */
            if(nameCheckBox.isSelected())
                if(con.performQuerey("UPDATE USERNAME.PRODUCTS SET PRODUCT_NAME ='"+newName+"' WHERE PRODUCT_ID ="+productId)!=1)   wrongId = true;
            if(priceCheckBox.isSelected())
                if(con.performQuerey("UPDATE USERNAME.PRODUCTS SET PRODUCTS_PRICE = "+newPrice+" WHERE PRODUCT_ID ="+productId)!=1) wrongId = true;
            if(descriptionCheckBox.isSelected())
                if(con.performQuerey("UPDATE USERNAME.PRODUCTS SET PRODUCT_DESCRIPTION ='"+newDescribtion+"' WHERE PRODUCT_ID ="+productId)!=1) wrongId = true;
            //storing id of admins who did the changes:
            if( con.performQuerey("UPDATE USERNAME.PRODUCTS SET admin_id ="+adminId+" WHERE PRODUCT_ID ="+productId)!=1 )    wrongId = true;
                
            if(imagecheckBox.isSelected())
                 if(con.performQuerey("UPDATE USERNAME.PRODUCTS SET pictures = '"+imgPath+"' WHERE PRODUCT_ID ="+productId)!=1) wrongId = true;

            
            if(!wrongId)    JOptionPane.showMessageDialog(null,"product sucessfully modified");
            else            JOptionPane.showMessageDialog(null,"no such id");
        //if there's/re error(s) in numbering formating for input print the error.   
        }catch(NumberFormatException inputEx){
                JOptionPane.showMessageDialog(null,inputEx);
        }
        

    }//GEN-LAST:event_editProductActionPerformed

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        //try and catch to avoid crashing in case of unsuitable input type
        try{
            //get products inforamtion from admin
             String productName = setNameTxtField.getText().trim();
             String productDescribtion = set_product_describtion.getText().trim();
             Imagepath = productPicturePath.getText().trim();
             double poductPrice = Double.parseDouble(setPriceTxtField.getText().trim());
            //adding then checking if product added successfully
            //if the admin doesn'tprovid img then it's the default image
            if(Imagepath.equals(" ")||Imagepath.equals("picture path"))    Imagepath = "noAvailable.jpg";
            if(con.performQuerey("INSERT INTO USERNAME.PRODUCTS (PRODUCTS_PRICE, PRODUCT_NAME, PRODUCT_DESCRIPTION, pictures ,admin_id) VALUES ( "+poductPrice+",'"+productName+"','"+productDescribtion+"','"+Imagepath+"',"+adminId+")") == 1)
             {
                 try {
                      JOptionPane.showMessageDialog(null,"product added succesfuly");
                 } catch (Exception ex) {
                     JOptionPane.showMessageDialog(null,"something went wrong, communicate the developer");
                 }           
             }
             else JOptionPane.showMessageDialog(null,"error with adding product");
        }   
        catch(NumberFormatException inputEx){
            JOptionPane.showMessageDialog(null,"price can be only positive number");
        }
    }//GEN-LAST:event_addProductActionPerformed

    private void set_product_describtionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_set_product_describtionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_set_product_describtionActionPerformed

    private void setNameTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setNameTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setNameTxtFieldActionPerformed

    private void idProductToRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idProductToRemoveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idProductToRemoveActionPerformed

    private void productIdToEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productIdToEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productIdToEditActionPerformed

    private void descriptionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descriptionCheckBoxActionPerformed

    private void priceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceCheckBoxActionPerformed
           
    }//GEN-LAST:event_priceCheckBoxActionPerformed

    private void newProductPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProductPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newProductPriceActionPerformed

    private void setPriceTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setPriceTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_setPriceTxtFieldActionPerformed

    private void removeProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeProductActionPerformed
        try{
            int productId = Integer.parseInt(idProductToRemove.getText().trim());
            if( con.performQuerey("DELETE FROM USERNAME.PRODUCTS WHERE PRODUCT_ID ="+productId) == 1){
               con.performQuerey("UPDATE USERNAME.PRODUCTS SET admin_id ="+adminId+" WHERE PRODUCT_ID ="+Integer.parseInt(idProductToRemove.getText().trim()));
               JOptionPane.showMessageDialog(null,"product removed");
            }
            else{
                JOptionPane.showMessageDialog(null,"enter valid id");
            }
        }
        catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(null,"enter valid id");
        }
        
    }//GEN-LAST:event_removeProductActionPerformed

    private void viewHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewHistoryActionPerformed
        ResultSet res = con.resFromDataBase("select product_name from products where admin_id = "+adminId);
        String productsByAdmins = "";
        boolean atleastone = false;

        try {
            while(res.next()){
                atleastone = true;
                productsByAdmins = productsByAdmins +" \n"+ res.getString("product_name");
            }
            history.setText(productsByAdmins);
        } catch (SQLException ex) {
            if(atleastone)  history.setText(productsByAdmins);       
            else    JOptionPane.showMessageDialog(null,"admin has no activity history yet!");
        }
        
        
    }//GEN-LAST:event_viewHistoryActionPerformed

    private void productPicturePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productPicturePathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productPicturePathActionPerformed

    private void imagecheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imagecheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imagecheckBoxActionPerformed

    private void productPicturePathMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productPicturePathMouseClicked
      
    }//GEN-LAST:event_productPicturePathMouseClicked

    private void nameCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameCheckBoxActionPerformed

    private void imageChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageChooserActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File file = chooser.getSelectedFile();
        Imagepath = file.getName();
    }//GEN-LAST:event_imageChooserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProduct;
    private javax.swing.JCheckBox descriptionCheckBox;
    private javax.swing.JButton editProduct;
    private javax.swing.JTextArea history;
    private javax.swing.JTextField idProductToRemove;
    private javax.swing.JButton imageChooser;
    private javax.swing.JTextField imagePath;
    private javax.swing.JCheckBox imagecheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox nameCheckBox;
    private javax.swing.JTextField newProductDescription;
    private javax.swing.JTextField newProductName;
    private javax.swing.JTextField newProductPrice;
    private javax.swing.JCheckBox priceCheckBox;
    private javax.swing.JTextField productIdToEdit;
    private javax.swing.JTextField productPicturePath;
    private javax.swing.JButton removeProduct;
    private javax.swing.JTextField setNameTxtField;
    private javax.swing.JTextField setPriceTxtField;
    private javax.swing.JTextField set_product_describtion;
    private javax.swing.JButton viewHistory;
    // End of variables declaration//GEN-END:variables
}
/*
//get the last added product === MAX(id)
                     ResultSet res = con.resFromDataBase("SELECT *FROM products WHERE product_id = ( SELECT MAX(product_id) FROM products )");
                     //the cursor position start pointing before the first row of result to we make it point to the first row(and it's the only row in this query as id is unique)
                     res.next();
                     int productId = res.getInt("PRODUCT_ID");
                     //if we change update with insert command it will not work
                     con.performQuerey("UPDATE USERNAME.ADMIN SET PRODUCT_ID ="+productId);
                     //storing id of admins who did the changes:
                      con.performQuerey("UPDATE USERNAME.PRODUCTS SET admin_id ="+adminId+" WHERE PRODUCT_ID ="+productId);
                     */